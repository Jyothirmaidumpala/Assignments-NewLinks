using Microsoft.OData.Edm;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LinqAssignment1
{
    class Employee
    {
        public int EmployeeID;
        public string FirstName;
        public string LastName;
        public string Title;
        public Date DOB;
        public Date DOJ;
        public string City;
    }
    class LinqPrj
    {
        static void Main()
        {


            List<Employee> emplist = new List<Employee>()
            {
                new Employee(){EmployeeID=1001,FirstName="Malcolm",LastName= "Daruwalla" , Title= "Manager ", DOB = Date.Parse( "16/11/1984"), DOJ =Date.Parse( " 8/ 6/2011"), City = "Mumbai"},
                new Employee(){EmployeeID=1002,FirstName="Asdin",LastName= "Dhalla " , Title= "AsstManager", DOB = Date.Parse( "20/08/1984"), DOJ =Date.Parse( " 7/ 7/2012"), City = "Mumbai"},
                new Employee(){EmployeeID=1003,FirstName="Madhavi",LastName= "Oza" , Title= "Consultant ", DOB = Date.Parse( "14/11/1987"), DOJ =Date.Parse( "12/ 4/2015"), City = "Pune"},
                new Employee(){EmployeeID=1004,FirstName="Saba",LastName= "Shaikh" , Title= "SE ", DOB = Date.Parse( "3/ 6/1990"), DOJ =Date.Parse( " 2/ 2/2016"), City = "Pune"},
                new Employee(){EmployeeID=1005,FirstName="Nazia",LastName= "Shaikh" , Title= "SE ", DOB = Date.Parse( "8/ 3/1991"), DOJ =Date.Parse( " 2/ 2/2016"), City = "Mumbai"},
                new Employee(){EmployeeID=1006,FirstName="Amit ",LastName= "Patha" , Title= "Consultant", DOB = Date.Parse( "7/11/1989"), DOJ =Date.Parse( " 8/ 8/2014"), City = "Chennai"},
                new Employee(){EmployeeID=1007,FirstName="Vijay",LastName= "Natrajan" , Title= "Consultant ", DOB = Date.Parse( "2/12/1989"), DOJ =Date.Parse( " 1/ 6/2015"), City = "Mumbai"},
                new Employee(){EmployeeID=1008,FirstName="Rahul",LastName= "Dubey" , Title= "Associate", DOB = Date.Parse( "11/11/1993"), DOJ =Date.Parse( " 6/11/2014"), City = "Chennai"},
                new Employee(){EmployeeID=1009,FirstName="Suresh",LastName= "Mistry" , Title= "Associate", DOB = Date.Parse( "12/ 8/1992"), DOJ =Date.Parse( " 3/12/2014"), City = "Chennai"},
                new Employee(){EmployeeID=1010,FirstName="Sumit",LastName= "Shah" , Title= "Manager", DOB = Date.Parse( "12/ 4/1991"), DOJ =Date.Parse( " 2/ 1/2016"), City = "Pune"},


            };
            //1.Display detail of all the employee

            var a = from e in emplist
                    select e;
            Console.WriteLine("Display the  details of the Employees:\n");
            foreach (var item in a)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);
            }
            Console.WriteLine();
            //2.Display details of all the employee whose location is not Mumbai

            Console.WriteLine("Display details of all the employee whose location is not Mumbai:\n");
            var b = from e in emplist
                     where e.City != "Mumbai"
                     select e;
            foreach (var item in b)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);
            }
            Console.WriteLine();
            //3.Display details of all the employee whose title is AsstManager

            Console.WriteLine("3.Display details of all the employee whose title is AsstManager:\n");
            var c = from e in emplist
                     where e.Title.Contains("AsstManager")
                     select e;
            foreach (var item in c)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);
            }
            Console.WriteLine();
            //4.Display details of all the employee whose Last Name start with S

            Console.WriteLine("4.Display details of all the employee whose Last Name start with S\n");
            var d = from e in emplist
                     where e.LastName.StartsWith("S")
                     select e;
            foreach (var item in d)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }
            Console.WriteLine();
            //5.Display a list of all the employee who have joined before 1 / 1 / 2015

            Console.WriteLine("Display a list of all the employee who have joined before 1/1/2015\n");
            var f= from e in emplist
                     where e.DOJ < Date.Parse("1/1/2015")
                     select e;
            foreach (var item in f)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }
            Console.WriteLine();
            //6.Display a list of all the employee whose date of birth is after 1/1/1990

            Console.WriteLine("Display a list of all the employee whose date of birth is after 1/1/1990");
            var g= from e in emplist
                     where e.DOB > Date.Parse("1/1/1990")
                     select e;
            foreach (var item in g)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }
            Console.WriteLine();

            //7.Display a list of all the employee whose designation is Consultant and Associate

            Console.WriteLine("Display a list of all the employee whose designation is Consultant and Associate\n");
            var h = from e in emplist
                     where (e.Title.Contains("Consultant") || e.Title.Contains("Associate"))
                     select e;
            foreach (var item in h)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }
            Console.WriteLine();

            //8.Display total number of employees

            Console.WriteLine("8.Display total number of employees\n");
            var i = (from e in emplist
                      select e.EmployeeID).Count();
            Console.WriteLine("Total number of employees: {0}", i);
            Console.WriteLine();

            //9.Display total number of employees belonging to “Chennai

            Console.WriteLine("Display total number of employees belonging to “Chennai”\n");
            var j = (from e in emplist
                      where e.City == "Chennai"
                      select e.EmployeeID).Count();
            Console.WriteLine("Total number of employees from chennai: {0}", j);
            Console.WriteLine();
            //10.Display highest employee id from the list

            Console.WriteLine("Display highest employee id from the list\n");
            int k = (from e in emplist
                      select e.EmployeeID).Max();
            Console.WriteLine("Highest employee ID from the list is: {0}", k);
            Console.WriteLine();

            //11.Display a list of all the employee who have joined after 1 / 1 / 2015

            Console.WriteLine("Display a list of all the employee who have joined after 1/1/2015\n");
            var l = from e in emplist
                      where e.DOJ > Date.Parse("1/1/2015")
                      select e;
            foreach (var item in l)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }
            Console.WriteLine();
            //12.Display total number of employee whose designation is not “Associate

            Console.WriteLine("Display total number of employee whose designation is not “Associate”\n");
            int m = (from e in emplist
                       where e.Title != "Associate"
                       select e.EmployeeID).Count();
            Console.WriteLine("Number of employees other than Associates: {0}", m);
            Console.WriteLine();

            //13.Display total number of employee based on City

            Console.WriteLine("Display total number of employee based on City\n");
            var n = from e in emplist
                      group e by e.City into e1
                      select new { cnt = e1.Count(), e1.First().City, };
            foreach (var item in n)
            {
                Console.WriteLine("Number of employees:{0} in City:{1}", item.cnt, item.City);
            }
            Console.WriteLine();

            //14.Display total number of employee based on city and title

            Console.WriteLine("Display total number of employee based on city and title\n");
            var o = (from e in emplist
                       group e by (e.City, e.Title) into city
                       orderby city.Key
                       select city);
            foreach (var item in o)
            {
                Console.WriteLine(item.Key + "\t" + item.Count());
            }
            Console.WriteLine();

            //15.Display total number of employee who is youngest in the list

            Console.WriteLine("Display total number of employee who is youngest in the list\n");
            var p = (from e in emplist
                       group e by (e.DOB, e.EmployeeID) into DOB
                       orderby DOB.Key descending
                       select DOB);
            Console.WriteLine("The Youngest Employee in the List is:");
            foreach (var item in p)
            {
                Console.WriteLine($"Employee ID:{item.Key} and Count of Employees:{item.Count()}");
                Console.ReadLine();
            }
            Console.ReadLine();

        }
    }
}